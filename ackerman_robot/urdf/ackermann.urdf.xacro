<?xml version="1.0"?>
<robot name="ackermann_drive" xmlns:xacro="http://ros.org/wiki/xacro">
    <material name="Black">
        <color rgba="0 0 0 1" />
    </material>
    <material name="Grey">
        <color rgba="0.8 0.8 0.8 1" />
    </material>
    <material name="Orange">
        <color rgba="1 0.6 0 1" />
    </material>
    <material name="White">
        <color rgba="1 1 1 1" />
    </material>


    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.117"/>
    <xacro:property name="base_length" value="0.183"/>
    <xacro:property name="base_height" value="0.05"/>
    <xacro:property name="base_mass" value="120"/>

    <xacro:property name="wheel_radius" value="0.03"/>
    <xacro:property name="wheel_width" value="0.02"/>
    <xacro:property name="wheel_mass" value="11"/>



    <xacro:property name="wheel_ygap" value="0.025"/>
    <xacro:property name="wheel_zoff" value="0.05"/>
    <xacro:property name="wheel_xoff" value="0.12"/>



    <xacro:arg name="sim_mode" default="false"/>



      <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
                    izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>


    <link name="base_link" />

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

     <link name="base_footprint">
    </link>


    <!-- LIDAR   -->
     <joint name="laser_joint" type="fixed">
        <parent link="chassis"/>
        <child link="laser_frame"/>
        <origin xyz="0.022 0 0.095" rpy="0 0 0"/>
    </joint>

    <link name="laser_frame">
        <visual>
            <geometry>
                <cylinder radius="0.02" length="0.02"/>
            </geometry>
            <material name="Orange"/>
        </visual>
        <visual>
            <origin xyz="0 0 -0.02"/>
            <geometry>
                <cylinder radius="0.01" length="0.1"/>
            </geometry>
            <material name="Black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.02" length="0.02"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.02" radius="0.02">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>



    <gazebo reference="laser_frame">
        <material>Gazebo/Red</material>

        <sensor name="laser" type="gpu_lidar">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <lidar>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </lidar>
           <topic>scan</topic>
            <gz_frame_id>laser_frame</gz_frame_id>
        </sensor>
    </gazebo>

    <!-- Chassis -->
    <link name="chassis">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <material name="Orange" />
        </visual>

        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="${base_mass}" />
            <inertia ixx="${1/12 * base_mass * (base_height**2 + base_length ** 2)}" ixy="0.0" ixz="0.0" 
            iyy="${1/12 * base_mass * (base_height ** 2 + base_width ** 2)}" iyz="0.0" 
            izz="${1/12 * base_mass * (base_width ** 2 + base_length ** 2)}" />
        </inertial>
    </link>

    <joint name="chassis_joint" type="fixed">
        <origin xyz="0.8 0 0.1" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="chassis" />
    </joint>

    <!-- rear left wheel Link -->
    <link name="rear_left_wheel">
        <collision>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
            <material name="Black" />
        </visual>

        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="rear_left_wheel_joint" type="continuous">
        <origin xyz="-0.07 0.06 -0.03" rpy="-1.57 0 0" />
        <parent link="chassis" />
        <child link="rear_left_wheel" />
        <axis xyz="0 0 1" />
        <dynamics damping="0.02" />
    </joint>

    <!-- rear right wheel Link -->
    <link name="rear_right_wheel">
        <collision>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
            <material name="Black" />
        </visual>
        
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="rear_right_wheel_joint" type="continuous">
        <origin xyz="-0.07 -0.06 -0.03" rpy="-1.57 0 0" />
        <parent link="chassis" />
        <child link="rear_right_wheel" />
        <axis xyz="0 0 1" />
        <dynamics damping="0.02" />
    </joint>

   
    <link name="left_wheel_steering">
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.26" ixy="0.0" ixz="0.0" iyy="0.26" iyz="0.0" izz="0.51" />
        </inertial>
    </link>

    <joint name="left_wheel_steering_joint" type="revolute">
        <origin xyz="0.07 -0.06 -0.03" rpy="1.57 0 0" />
        <parent link="chassis" />
        <child link="left_wheel_steering" />
        <axis xyz="0 1 0" />
        <dynamics damping="0.02" />
        <limit effort="10000.0" lower="-0.57" upper="0.57" velocity="30"/>
    </joint>

    <link name="right_wheel_steering">
        <inertial>
           <mass value="${wheel_mass}" />
            <inertia ixx="${1/12*wheel_mass*(3*wheel_radius**2+wheel_width)}" 
            ixy="0.0" ixz="0.0" 
            iyy="${1/12*wheel_mass*(3*wheel_radius**2+wheel_width)}"  iyz="0.0" 
            izz="${1/12*wheel_mass*wheel_radius**2}" />
        </inertial>
    </link>

    <joint name="right_wheel_steering_joint" type="revolute">
        <origin xyz="0.07 0.06 -0.03" rpy="1.57 0 0" />
        <parent link="chassis" />
        <child link="right_wheel_steering" />
        <axis xyz="0 1 0" />
        <dynamics damping="0.02" />
        <limit effort="10000.0" lower="-0.57" upper="0.57" velocity="30"/>
    </joint>

    
    <link name="front_left_wheel">
        <collision>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
            <material name="Black" />
        </visual>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="front_left_wheel_joint" type="continuous">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="left_wheel_steering" />
        <child link="front_left_wheel" />
        <axis xyz="0 0 1" />
        <dynamics damping="0.02" />
    </joint>

   
    <link name="front_right_wheel">
        <collision>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
            </geometry>
            <material name="Black" />
        </visual>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="front_right_wheel_joint" type="continuous">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="right_wheel_steering" />
        <child link="front_right_wheel" />
        <axis xyz="0 0 1" />
        <dynamics damping="0.02" />
    </joint>


    <xacro:unless value="$(arg sim_mode)">
    
        <ros2_control name="OnyCroit" type="system">
        <hardware>
            <plugin>ackerman_robot/DiffDriveArduinoHardware</plugin>
            <param name="front_left_wheel_name">left_wheel_steering_joint</param>
            <param name="front_right_wheel_name">right_wheel_steering_joint</param>
            <param name="rear_left_wheel_name">rear_left_wheel_joint</param>
            <param name="rear_right_wheel_name">rear_right_wheel_joint</param>
            <param name="loop_rate">30</param>
            <param name="device">/dev/ttyACM0</param>
            <param name="baud_rate">115200</param>
            <param name="timeout_ms">1000</param>
            <param name="enc_counts_per_rev">3436</param>
            <param name="pid_p">20</param>
            <param name="pid_d">12</param>
            <param name="pid_i">0</param>
            <param name="pid_o">50</param>
        </hardware>
        
        <joint name="rear_left_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="velocity" />
        <state_interface name="position" />
        </joint>

            <joint name="rear_right_wheel_joint">
            <command_interface name="velocity" />
            <state_interface name="velocity" />
            <state_interface name="position" />
            </joint>
            
            <joint name="left_wheel_steering_joint">
            <command_interface name="position" />
            <state_interface name="position" />
            </joint>
            
            <joint name="right_wheel_steering_joint">
            <command_interface name="position" />
            <state_interface name="position" />
            </joint>
        </ros2_control>
    </xacro:unless>



    <xacro:if value="$(arg sim_mode)">
        <ros2_control name="GazeboSystem" type="system">
            <hardware>
            <plugin>gz_ros2_control/GazeboSimSystem</plugin>
            </hardware>
            <joint name="rear_left_wheel_joint">
                <command_interface name="velocity" />
                <state_interface name="velocity" />
                <state_interface name="position" />
            </joint>
            <joint name="rear_right_wheel_joint">
                <command_interface name="velocity" />
                <state_interface name="velocity" />
                <state_interface name="position" />
            </joint>
                <joint name="left_wheel_steering_joint">
                <command_interface name="position" />
                <state_interface name="position" />
                <state_interface name="velocity" />
            </joint>
            <joint name="right_wheel_steering_joint">
                <command_interface name="position" />
                <state_interface name="position" />
                <state_interface name="velocity" />
            </joint>
        </ros2_control>

        <gazebo>
            <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
                <parameters>$(find ackerman_robot)/config/ackermann_controller.yaml</parameters>
            </plugin>
        </gazebo>
    </xacro:if>
</robot>
